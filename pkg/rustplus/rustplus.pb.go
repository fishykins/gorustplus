// Code generated by protoc-gen-go. DO NOT EDIT.
// I AM EDITING THIS FILE, AND I AM SORRY.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: internal/rustplus.proto

package rustplus

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppEntityType int32

const (
	AppEntityType_Switch         AppEntityType = 1
	AppEntityType_Alarm          AppEntityType = 2
	AppEntityType_StorageMonitor AppEntityType = 3
)

// Enum value maps for AppEntityType.
var (
	AppEntityType_name = map[int32]string{
		1: "Switch",
		2: "Alarm",
		3: "StorageMonitor",
	}
	AppEntityType_value = map[string]int32{
		"Switch":         1,
		"Alarm":          2,
		"StorageMonitor": 3,
	}
)

func (x AppEntityType) Enum() *AppEntityType {
	p := new(AppEntityType)
	*p = x
	return p
}

func (x AppEntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppEntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_rustplus_proto_enumTypes[0].Descriptor()
}

func (AppEntityType) Type() protoreflect.EnumType {
	return &file_internal_rustplus_proto_enumTypes[0]
}

func (x AppEntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AppEntityType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AppEntityType(num)
	return nil
}

// Deprecated: Use AppEntityType.Descriptor instead.
func (AppEntityType) EnumDescriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{0}
}

type AppMarkerType int32

const (
	AppMarkerType_Player         AppMarkerType = 1
	AppMarkerType_Explosion      AppMarkerType = 2
	AppMarkerType_VendingMachine AppMarkerType = 3
	AppMarkerType_CH47           AppMarkerType = 4
	AppMarkerType_CargoShip      AppMarkerType = 5
	AppMarkerType_Crate          AppMarkerType = 6
	AppMarkerType_GenericRadius  AppMarkerType = 7
)

// Enum value maps for AppMarkerType.
var (
	AppMarkerType_name = map[int32]string{
		1: "Player",
		2: "Explosion",
		3: "VendingMachine",
		4: "CH47",
		5: "CargoShip",
		6: "Crate",
		7: "GenericRadius",
	}
	AppMarkerType_value = map[string]int32{
		"Player":         1,
		"Explosion":      2,
		"VendingMachine": 3,
		"CH47":           4,
		"CargoShip":      5,
		"Crate":          6,
		"GenericRadius":  7,
	}
)

func (x AppMarkerType) Enum() *AppMarkerType {
	p := new(AppMarkerType)
	*p = x
	return p
}

func (x AppMarkerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppMarkerType) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_rustplus_proto_enumTypes[1].Descriptor()
}

func (AppMarkerType) Type() protoreflect.EnumType {
	return &file_internal_rustplus_proto_enumTypes[1]
}

func (x AppMarkerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AppMarkerType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AppMarkerType(num)
	return nil
}

// Deprecated: Use AppMarkerType.Descriptor instead.
func (AppMarkerType) EnumDescriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{1}
}

type AppMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response  *AppResponse  `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	Broadcast *AppBroadcast `protobuf:"bytes,2,opt,name=broadcast" json:"broadcast,omitempty"`
}

func (x *AppMessage) Reset() {
	*x = AppMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMessage) ProtoMessage() {}

func (x *AppMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMessage.ProtoReflect.Descriptor instead.
func (*AppMessage) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{0}
}

func (x *AppMessage) GetResponse() *AppResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *AppMessage) GetBroadcast() *AppBroadcast {
	if x != nil {
		return x.Broadcast
	}
	return nil
}

type AppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq               *uint32                `protobuf:"varint,1,req,name=seq" json:"seq,omitempty"`
	PlayerId          *uint64                `protobuf:"varint,2,req,name=playerId" json:"playerId,omitempty"`
	PlayerToken       *int32                 `protobuf:"varint,3,req,name=playerToken" json:"playerToken,omitempty"`
	EntityId          *uint32                `protobuf:"varint,4,opt,name=entityId" json:"entityId,omitempty"`
	GetInfo           *AppEmpty              `protobuf:"bytes,8,opt,name=getInfo" json:"getInfo,omitempty"`
	GetTime           *AppEmpty              `protobuf:"bytes,9,opt,name=getTime" json:"getTime,omitempty"`
	GetMap            *AppEmpty              `protobuf:"bytes,10,opt,name=getMap" json:"getMap,omitempty"`
	GetTeamInfo       *AppEmpty              `protobuf:"bytes,11,opt,name=getTeamInfo" json:"getTeamInfo,omitempty"`
	GetTeamChat       *AppEmpty              `protobuf:"bytes,12,opt,name=getTeamChat" json:"getTeamChat,omitempty"`
	SendTeamMessage   *AppSendMessage        `protobuf:"bytes,13,opt,name=sendTeamMessage" json:"sendTeamMessage,omitempty"`
	GetEntityInfo     *AppEmpty              `protobuf:"bytes,14,opt,name=getEntityInfo" json:"getEntityInfo,omitempty"`
	SetEntityValue    *AppSetEntityValue     `protobuf:"bytes,15,opt,name=setEntityValue" json:"setEntityValue,omitempty"`
	CheckSubscription *AppEmpty              `protobuf:"bytes,16,opt,name=checkSubscription" json:"checkSubscription,omitempty"`
	SetSubscription   *AppFlag               `protobuf:"bytes,17,opt,name=setSubscription" json:"setSubscription,omitempty"`
	GetMapMarkers     *AppEmpty              `protobuf:"bytes,18,opt,name=getMapMarkers" json:"getMapMarkers,omitempty"`
	GetCameraFrame    *AppCameraFrameRequest `protobuf:"bytes,19,opt,name=getCameraFrame" json:"getCameraFrame,omitempty"`
	PromoteToLeader   *AppPromoteToLeader    `protobuf:"bytes,20,opt,name=promoteToLeader" json:"promoteToLeader,omitempty"`
}

func (x *AppRequest) Reset() {
	*x = AppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRequest) ProtoMessage() {}

func (x *AppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRequest.ProtoReflect.Descriptor instead.
func (*AppRequest) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{1}
}

func (x *AppRequest) GetSeq() uint32 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *AppRequest) GetPlayerId() uint64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *AppRequest) GetPlayerToken() int32 {
	if x != nil && x.PlayerToken != nil {
		return *x.PlayerToken
	}
	return 0
}

func (x *AppRequest) GetEntityId() uint32 {
	if x != nil && x.EntityId != nil {
		return *x.EntityId
	}
	return 0
}

func (x *AppRequest) GetGetInfo() *AppEmpty {
	if x != nil {
		return x.GetInfo
	}
	return nil
}

func (x *AppRequest) GetGetTime() *AppEmpty {
	if x != nil {
		return x.GetTime
	}
	return nil
}

func (x *AppRequest) GetGetMap() *AppEmpty {
	if x != nil {
		return x.GetMap
	}
	return nil
}

func (x *AppRequest) GetGetTeamInfo() *AppEmpty {
	if x != nil {
		return x.GetTeamInfo
	}
	return nil
}

func (x *AppRequest) GetGetTeamChat() *AppEmpty {
	if x != nil {
		return x.GetTeamChat
	}
	return nil
}

func (x *AppRequest) GetSendTeamMessage() *AppSendMessage {
	if x != nil {
		return x.SendTeamMessage
	}
	return nil
}

func (x *AppRequest) GetGetEntityInfo() *AppEmpty {
	if x != nil {
		return x.GetEntityInfo
	}
	return nil
}

func (x *AppRequest) GetSetEntityValue() *AppSetEntityValue {
	if x != nil {
		return x.SetEntityValue
	}
	return nil
}

func (x *AppRequest) GetCheckSubscription() *AppEmpty {
	if x != nil {
		return x.CheckSubscription
	}
	return nil
}

func (x *AppRequest) GetSetSubscription() *AppFlag {
	if x != nil {
		return x.SetSubscription
	}
	return nil
}

func (x *AppRequest) GetGetMapMarkers() *AppEmpty {
	if x != nil {
		return x.GetMapMarkers
	}
	return nil
}

func (x *AppRequest) GetGetCameraFrame() *AppCameraFrameRequest {
	if x != nil {
		return x.GetCameraFrame
	}
	return nil
}

func (x *AppRequest) GetPromoteToLeader() *AppPromoteToLeader {
	if x != nil {
		return x.PromoteToLeader
	}
	return nil
}

type AppSendMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *string `protobuf:"bytes,1,req,name=message" json:"message,omitempty"`
}

func (x *AppSendMessage) Reset() {
	*x = AppSendMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSendMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSendMessage) ProtoMessage() {}

func (x *AppSendMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSendMessage.ProtoReflect.Descriptor instead.
func (*AppSendMessage) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{2}
}

func (x *AppSendMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type AppSetEntityValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *bool `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *AppSetEntityValue) Reset() {
	*x = AppSetEntityValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSetEntityValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSetEntityValue) ProtoMessage() {}

func (x *AppSetEntityValue) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSetEntityValue.ProtoReflect.Descriptor instead.
func (*AppSetEntityValue) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{3}
}

func (x *AppSetEntityValue) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

type AppCameraFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *string `protobuf:"bytes,1,req,name=identifier" json:"identifier,omitempty"`
	Frame      *uint32 `protobuf:"varint,2,req,name=frame" json:"frame,omitempty"`
}

func (x *AppCameraFrameRequest) Reset() {
	*x = AppCameraFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCameraFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCameraFrameRequest) ProtoMessage() {}

func (x *AppCameraFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCameraFrameRequest.ProtoReflect.Descriptor instead.
func (*AppCameraFrameRequest) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{4}
}

func (x *AppCameraFrameRequest) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

func (x *AppCameraFrameRequest) GetFrame() uint32 {
	if x != nil && x.Frame != nil {
		return *x.Frame
	}
	return 0
}

type AppPromoteToLeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId *uint64 `protobuf:"varint,1,req,name=steamId" json:"steamId,omitempty"`
}

func (x *AppPromoteToLeader) Reset() {
	*x = AppPromoteToLeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPromoteToLeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPromoteToLeader) ProtoMessage() {}

func (x *AppPromoteToLeader) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPromoteToLeader.ProtoReflect.Descriptor instead.
func (*AppPromoteToLeader) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{5}
}

func (x *AppPromoteToLeader) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

type AppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq         *uint32         `protobuf:"varint,1,req,name=seq" json:"seq,omitempty"`
	Success     *AppSuccess     `protobuf:"bytes,4,opt,name=success" json:"success,omitempty"`
	Error       *AppError       `protobuf:"bytes,5,opt,name=error" json:"error,omitempty"`
	Info        *AppInfo        `protobuf:"bytes,6,opt,name=info" json:"info,omitempty"`
	Time        *AppTime        `protobuf:"bytes,7,opt,name=time" json:"time,omitempty"`
	Map         *AppMap         `protobuf:"bytes,8,opt,name=map" json:"map,omitempty"`
	TeamInfo    *AppTeamInfo    `protobuf:"bytes,9,opt,name=teamInfo" json:"teamInfo,omitempty"`
	TeamChat    *AppTeamChat    `protobuf:"bytes,10,opt,name=teamChat" json:"teamChat,omitempty"`
	EntityInfo  *AppEntityInfo  `protobuf:"bytes,11,opt,name=entityInfo" json:"entityInfo,omitempty"`
	Flag        *AppFlag        `protobuf:"bytes,12,opt,name=flag" json:"flag,omitempty"`
	MapMarkers  *AppMapMarkers  `protobuf:"bytes,13,opt,name=mapMarkers" json:"mapMarkers,omitempty"`
	CameraFrame *AppCameraFrame `protobuf:"bytes,14,opt,name=cameraFrame" json:"cameraFrame,omitempty"`
}

func (x *AppResponse) Reset() {
	*x = AppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppResponse) ProtoMessage() {}

func (x *AppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppResponse.ProtoReflect.Descriptor instead.
func (*AppResponse) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{6}
}

func (x *AppResponse) GetSeq() uint32 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *AppResponse) GetSuccess() *AppSuccess {
	if x != nil {
		return x.Success
	}
	return nil
}

func (x *AppResponse) GetError() *AppError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AppResponse) GetInfo() *AppInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *AppResponse) GetTime() *AppTime {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *AppResponse) GetMap() *AppMap {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *AppResponse) GetTeamInfo() *AppTeamInfo {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

func (x *AppResponse) GetTeamChat() *AppTeamChat {
	if x != nil {
		return x.TeamChat
	}
	return nil
}

func (x *AppResponse) GetEntityInfo() *AppEntityInfo {
	if x != nil {
		return x.EntityInfo
	}
	return nil
}

func (x *AppResponse) GetFlag() *AppFlag {
	if x != nil {
		return x.Flag
	}
	return nil
}

func (x *AppResponse) GetMapMarkers() *AppMapMarkers {
	if x != nil {
		return x.MapMarkers
	}
	return nil
}

func (x *AppResponse) GetCameraFrame() *AppCameraFrame {
	if x != nil {
		return x.CameraFrame
	}
	return nil
}

type AppBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamChanged   *AppTeamChanged   `protobuf:"bytes,4,opt,name=teamChanged" json:"teamChanged,omitempty"`
	TeamMessage   *AppTeamMessage   `protobuf:"bytes,5,opt,name=teamMessage" json:"teamMessage,omitempty"`
	EntityChanged *AppEntityChanged `protobuf:"bytes,6,opt,name=entityChanged" json:"entityChanged,omitempty"`
}

func (x *AppBroadcast) Reset() {
	*x = AppBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBroadcast) ProtoMessage() {}

func (x *AppBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBroadcast.ProtoReflect.Descriptor instead.
func (*AppBroadcast) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{7}
}

func (x *AppBroadcast) GetTeamChanged() *AppTeamChanged {
	if x != nil {
		return x.TeamChanged
	}
	return nil
}

func (x *AppBroadcast) GetTeamMessage() *AppTeamMessage {
	if x != nil {
		return x.TeamMessage
	}
	return nil
}

func (x *AppBroadcast) GetEntityChanged() *AppEntityChanged {
	if x != nil {
		return x.EntityChanged
	}
	return nil
}

type AppEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppEmpty) Reset() {
	*x = AppEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppEmpty) ProtoMessage() {}

func (x *AppEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppEmpty.ProtoReflect.Descriptor instead.
func (*AppEmpty) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{8}
}

type AppSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AppSuccess) Reset() {
	*x = AppSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSuccess) ProtoMessage() {}

func (x *AppSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSuccess.ProtoReflect.Descriptor instead.
func (*AppSuccess) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{9}
}

type AppError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *string `protobuf:"bytes,1,req,name=error" json:"error,omitempty"`
}

func (x *AppError) Reset() {
	*x = AppError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppError) ProtoMessage() {}

func (x *AppError) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppError.ProtoReflect.Descriptor instead.
func (*AppError) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{10}
}

func (x *AppError) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	HeaderImage   *string `protobuf:"bytes,2,req,name=headerImage" json:"headerImage,omitempty"`
	Url           *string `protobuf:"bytes,3,req,name=url" json:"url,omitempty"`
	Map           *string `protobuf:"bytes,4,req,name=map" json:"map,omitempty"`
	MapSize       *uint32 `protobuf:"varint,5,req,name=mapSize" json:"mapSize,omitempty"`
	WipeTime      *uint32 `protobuf:"varint,6,req,name=wipeTime" json:"wipeTime,omitempty"`
	Players       *uint32 `protobuf:"varint,7,req,name=players" json:"players,omitempty"`
	MaxPlayers    *uint32 `protobuf:"varint,8,req,name=maxPlayers" json:"maxPlayers,omitempty"`
	QueuedPlayers *uint32 `protobuf:"varint,9,req,name=queuedPlayers" json:"queuedPlayers,omitempty"`
	Seed          *uint32 `protobuf:"varint,10,opt,name=seed" json:"seed,omitempty"`
	Salt          *uint32 `protobuf:"varint,11,opt,name=salt" json:"salt,omitempty"`
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{11}
}

func (x *AppInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AppInfo) GetHeaderImage() string {
	if x != nil && x.HeaderImage != nil {
		return *x.HeaderImage
	}
	return ""
}

func (x *AppInfo) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *AppInfo) GetMap() string {
	if x != nil && x.Map != nil {
		return *x.Map
	}
	return ""
}

func (x *AppInfo) GetMapSize() uint32 {
	if x != nil && x.MapSize != nil {
		return *x.MapSize
	}
	return 0
}

func (x *AppInfo) GetWipeTime() uint32 {
	if x != nil && x.WipeTime != nil {
		return *x.WipeTime
	}
	return 0
}

func (x *AppInfo) GetPlayers() uint32 {
	if x != nil && x.Players != nil {
		return *x.Players
	}
	return 0
}

func (x *AppInfo) GetMaxPlayers() uint32 {
	if x != nil && x.MaxPlayers != nil {
		return *x.MaxPlayers
	}
	return 0
}

func (x *AppInfo) GetQueuedPlayers() uint32 {
	if x != nil && x.QueuedPlayers != nil {
		return *x.QueuedPlayers
	}
	return 0
}

func (x *AppInfo) GetSeed() uint32 {
	if x != nil && x.Seed != nil {
		return *x.Seed
	}
	return 0
}

func (x *AppInfo) GetSalt() uint32 {
	if x != nil && x.Salt != nil {
		return *x.Salt
	}
	return 0
}

type AppTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayLengthMinutes *float32 `protobuf:"fixed32,1,req,name=dayLengthMinutes" json:"dayLengthMinutes,omitempty"`
	TimeScale        *float32 `protobuf:"fixed32,2,req,name=timeScale" json:"timeScale,omitempty"`
	Sunrise          *float32 `protobuf:"fixed32,3,req,name=sunrise" json:"sunrise,omitempty"`
	Sunset           *float32 `protobuf:"fixed32,4,req,name=sunset" json:"sunset,omitempty"`
	Time             *float32 `protobuf:"fixed32,5,req,name=time" json:"time,omitempty"`
}

func (x *AppTime) Reset() {
	*x = AppTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTime) ProtoMessage() {}

func (x *AppTime) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTime.ProtoReflect.Descriptor instead.
func (*AppTime) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{12}
}

func (x *AppTime) GetDayLengthMinutes() float32 {
	if x != nil && x.DayLengthMinutes != nil {
		return *x.DayLengthMinutes
	}
	return 0
}

func (x *AppTime) GetTimeScale() float32 {
	if x != nil && x.TimeScale != nil {
		return *x.TimeScale
	}
	return 0
}

func (x *AppTime) GetSunrise() float32 {
	if x != nil && x.Sunrise != nil {
		return *x.Sunrise
	}
	return 0
}

func (x *AppTime) GetSunset() float32 {
	if x != nil && x.Sunset != nil {
		return *x.Sunset
	}
	return 0
}

func (x *AppTime) GetTime() float32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

type AppMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width       *uint32            `protobuf:"varint,1,req,name=width" json:"width,omitempty"`
	Height      *uint32            `protobuf:"varint,2,req,name=height" json:"height,omitempty"`
	JpgImage    []byte             `protobuf:"bytes,3,req,name=jpgImage" json:"jpgImage,omitempty"`
	OceanMargin *int32             `protobuf:"varint,4,req,name=oceanMargin" json:"oceanMargin,omitempty"`
	Monuments   []*AppMap_Monument `protobuf:"bytes,5,rep,name=monuments" json:"monuments,omitempty"`
	Background  *string            `protobuf:"bytes,6,opt,name=background" json:"background,omitempty"`
}

func (x *AppMap) Reset() {
	*x = AppMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMap) ProtoMessage() {}

func (x *AppMap) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMap.ProtoReflect.Descriptor instead.
func (*AppMap) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{13}
}

func (x *AppMap) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *AppMap) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *AppMap) GetJpgImage() []byte {
	if x != nil {
		return x.JpgImage
	}
	return nil
}

func (x *AppMap) GetOceanMargin() int32 {
	if x != nil && x.OceanMargin != nil {
		return *x.OceanMargin
	}
	return 0
}

func (x *AppMap) GetMonuments() []*AppMap_Monument {
	if x != nil {
		return x.Monuments
	}
	return nil
}

func (x *AppMap) GetBackground() string {
	if x != nil && x.Background != nil {
		return *x.Background
	}
	return ""
}

type AppTeamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeaderSteamId  *uint64               `protobuf:"varint,1,req,name=leaderSteamId" json:"leaderSteamId,omitempty"`
	Members        []*AppTeamInfo_Member `protobuf:"bytes,2,rep,name=members" json:"members,omitempty"`
	MapNotes       []*AppTeamInfo_Note   `protobuf:"bytes,3,rep,name=mapNotes" json:"mapNotes,omitempty"`
	LeaderMapNotes []*AppTeamInfo_Note   `protobuf:"bytes,4,rep,name=leaderMapNotes" json:"leaderMapNotes,omitempty"`
}

func (x *AppTeamInfo) Reset() {
	*x = AppTeamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTeamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTeamInfo) ProtoMessage() {}

func (x *AppTeamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTeamInfo.ProtoReflect.Descriptor instead.
func (*AppTeamInfo) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{14}
}

func (x *AppTeamInfo) GetLeaderSteamId() uint64 {
	if x != nil && x.LeaderSteamId != nil {
		return *x.LeaderSteamId
	}
	return 0
}

func (x *AppTeamInfo) GetMembers() []*AppTeamInfo_Member {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *AppTeamInfo) GetMapNotes() []*AppTeamInfo_Note {
	if x != nil {
		return x.MapNotes
	}
	return nil
}

func (x *AppTeamInfo) GetLeaderMapNotes() []*AppTeamInfo_Note {
	if x != nil {
		return x.LeaderMapNotes
	}
	return nil
}

type AppTeamChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages []*AppChatMessage `protobuf:"bytes,1,rep,name=messages" json:"messages,omitempty"`
}

func (x *AppTeamChat) Reset() {
	*x = AppTeamChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTeamChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTeamChat) ProtoMessage() {}

func (x *AppTeamChat) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTeamChat.ProtoReflect.Descriptor instead.
func (*AppTeamChat) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{15}
}

func (x *AppTeamChat) GetMessages() []*AppChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type AppChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId *uint64 `protobuf:"varint,1,req,name=steamId" json:"steamId,omitempty"`
	Name    *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Message *string `protobuf:"bytes,3,req,name=message" json:"message,omitempty"`
	Color   *string `protobuf:"bytes,4,req,name=color" json:"color,omitempty"`
	Time    *uint32 `protobuf:"varint,5,req,name=time" json:"time,omitempty"`
}

func (x *AppChatMessage) Reset() {
	*x = AppChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppChatMessage) ProtoMessage() {}

func (x *AppChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppChatMessage.ProtoReflect.Descriptor instead.
func (*AppChatMessage) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{16}
}

func (x *AppChatMessage) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *AppChatMessage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AppChatMessage) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *AppChatMessage) GetColor() string {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return ""
}

func (x *AppChatMessage) GetTime() uint32 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

type AppEntityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *AppEntityType    `protobuf:"varint,1,req,name=type,enum=rustplus.AppEntityType" json:"type,omitempty"`
	Payload *AppEntityPayload `protobuf:"bytes,3,req,name=payload" json:"payload,omitempty"`
}

func (x *AppEntityInfo) Reset() {
	*x = AppEntityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppEntityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppEntityInfo) ProtoMessage() {}

func (x *AppEntityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppEntityInfo.ProtoReflect.Descriptor instead.
func (*AppEntityInfo) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{17}
}

func (x *AppEntityInfo) GetType() AppEntityType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return AppEntityType_Switch
}

func (x *AppEntityInfo) GetPayload() *AppEntityPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type AppEntityPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value            *bool                    `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
	Items            []*AppEntityPayload_Item `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	Capacity         *int32                   `protobuf:"varint,3,opt,name=capacity" json:"capacity,omitempty"`
	HasProtection    *bool                    `protobuf:"varint,4,opt,name=hasProtection" json:"hasProtection,omitempty"`
	ProtectionExpiry *uint32                  `protobuf:"varint,5,opt,name=protectionExpiry" json:"protectionExpiry,omitempty"`
}

func (x *AppEntityPayload) Reset() {
	*x = AppEntityPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppEntityPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppEntityPayload) ProtoMessage() {}

func (x *AppEntityPayload) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppEntityPayload.ProtoReflect.Descriptor instead.
func (*AppEntityPayload) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{18}
}

func (x *AppEntityPayload) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

func (x *AppEntityPayload) GetItems() []*AppEntityPayload_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AppEntityPayload) GetCapacity() int32 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

func (x *AppEntityPayload) GetHasProtection() bool {
	if x != nil && x.HasProtection != nil {
		return *x.HasProtection
	}
	return false
}

func (x *AppEntityPayload) GetProtectionExpiry() uint32 {
	if x != nil && x.ProtectionExpiry != nil {
		return *x.ProtectionExpiry
	}
	return 0
}

type AppFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *bool `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *AppFlag) Reset() {
	*x = AppFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppFlag) ProtoMessage() {}

func (x *AppFlag) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppFlag.ProtoReflect.Descriptor instead.
func (*AppFlag) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{19}
}

func (x *AppFlag) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

type AppMapMarkers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Markers []*AppMarker `protobuf:"bytes,1,rep,name=markers" json:"markers,omitempty"`
}

func (x *AppMapMarkers) Reset() {
	*x = AppMapMarkers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMapMarkers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMapMarkers) ProtoMessage() {}

func (x *AppMapMarkers) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMapMarkers.ProtoReflect.Descriptor instead.
func (*AppMapMarkers) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{20}
}

func (x *AppMapMarkers) GetMarkers() []*AppMarker {
	if x != nil {
		return x.Markers
	}
	return nil
}

type Vector4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *float32 `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y *float32 `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z *float32 `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	W *float32 `protobuf:"fixed32,4,opt,name=w" json:"w,omitempty"`
}

func (x *Vector4) Reset() {
	*x = Vector4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vector4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector4) ProtoMessage() {}

func (x *Vector4) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector4.ProtoReflect.Descriptor instead.
func (*Vector4) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{21}
}

func (x *Vector4) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Vector4) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *Vector4) GetZ() float32 {
	if x != nil && x.Z != nil {
		return *x.Z
	}
	return 0
}

func (x *Vector4) GetW() float32 {
	if x != nil && x.W != nil {
		return *x.W
	}
	return 0
}

type AppMarker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *uint32                `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Type       *AppMarkerType         `protobuf:"varint,2,req,name=type,enum=rustplus.AppMarkerType" json:"type,omitempty"`
	X          *float32               `protobuf:"fixed32,3,req,name=x" json:"x,omitempty"`
	Y          *float32               `protobuf:"fixed32,4,req,name=y" json:"y,omitempty"`
	SteamId    *uint64                `protobuf:"varint,5,opt,name=steamId" json:"steamId,omitempty"`
	Rotation   *float32               `protobuf:"fixed32,6,opt,name=rotation" json:"rotation,omitempty"`
	Radius     *float32               `protobuf:"fixed32,7,opt,name=radius" json:"radius,omitempty"`
	Color1     *Vector4               `protobuf:"bytes,8,opt,name=color1" json:"color1,omitempty"`
	Color2     *Vector4               `protobuf:"bytes,9,opt,name=color2" json:"color2,omitempty"`
	Alpha      *float32               `protobuf:"fixed32,10,opt,name=alpha" json:"alpha,omitempty"`
	Name       *string                `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	SellOrders []*AppMarker_SellOrder `protobuf:"bytes,13,rep,name=sellOrders" json:"sellOrders,omitempty"`
}

func (x *AppMarker) Reset() {
	*x = AppMarker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMarker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMarker) ProtoMessage() {}

func (x *AppMarker) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMarker.ProtoReflect.Descriptor instead.
func (*AppMarker) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{22}
}

func (x *AppMarker) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *AppMarker) GetType() AppMarkerType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return AppMarkerType_Player
}

func (x *AppMarker) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *AppMarker) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *AppMarker) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *AppMarker) GetRotation() float32 {
	if x != nil && x.Rotation != nil {
		return *x.Rotation
	}
	return 0
}

func (x *AppMarker) GetRadius() float32 {
	if x != nil && x.Radius != nil {
		return *x.Radius
	}
	return 0
}

func (x *AppMarker) GetColor1() *Vector4 {
	if x != nil {
		return x.Color1
	}
	return nil
}

func (x *AppMarker) GetColor2() *Vector4 {
	if x != nil {
		return x.Color2
	}
	return nil
}

func (x *AppMarker) GetAlpha() float32 {
	if x != nil && x.Alpha != nil {
		return *x.Alpha
	}
	return 0
}

func (x *AppMarker) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AppMarker) GetSellOrders() []*AppMarker_SellOrder {
	if x != nil {
		return x.SellOrders
	}
	return nil
}

type AppCameraFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frame    *uint32 `protobuf:"varint,1,req,name=frame" json:"frame,omitempty"`
	JpgImage []byte  `protobuf:"bytes,2,req,name=jpgImage" json:"jpgImage,omitempty"`
}

func (x *AppCameraFrame) Reset() {
	*x = AppCameraFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppCameraFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppCameraFrame) ProtoMessage() {}

func (x *AppCameraFrame) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppCameraFrame.ProtoReflect.Descriptor instead.
func (*AppCameraFrame) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{23}
}

func (x *AppCameraFrame) GetFrame() uint32 {
	if x != nil && x.Frame != nil {
		return *x.Frame
	}
	return 0
}

func (x *AppCameraFrame) GetJpgImage() []byte {
	if x != nil {
		return x.JpgImage
	}
	return nil
}

type AppTeamChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *uint64      `protobuf:"varint,1,req,name=playerId" json:"playerId,omitempty"`
	TeamInfo *AppTeamInfo `protobuf:"bytes,2,req,name=teamInfo" json:"teamInfo,omitempty"`
}

func (x *AppTeamChanged) Reset() {
	*x = AppTeamChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTeamChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTeamChanged) ProtoMessage() {}

func (x *AppTeamChanged) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTeamChanged.ProtoReflect.Descriptor instead.
func (*AppTeamChanged) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{24}
}

func (x *AppTeamChanged) GetPlayerId() uint64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *AppTeamChanged) GetTeamInfo() *AppTeamInfo {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

type AppTeamMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *AppChatMessage `protobuf:"bytes,1,req,name=message" json:"message,omitempty"`
}

func (x *AppTeamMessage) Reset() {
	*x = AppTeamMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTeamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTeamMessage) ProtoMessage() {}

func (x *AppTeamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTeamMessage.ProtoReflect.Descriptor instead.
func (*AppTeamMessage) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{25}
}

func (x *AppTeamMessage) GetMessage() *AppChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type AppEntityChanged struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId *uint32           `protobuf:"varint,1,req,name=entityId" json:"entityId,omitempty"`
	Payload  *AppEntityPayload `protobuf:"bytes,2,req,name=payload" json:"payload,omitempty"`
}

func (x *AppEntityChanged) Reset() {
	*x = AppEntityChanged{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppEntityChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppEntityChanged) ProtoMessage() {}

func (x *AppEntityChanged) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppEntityChanged.ProtoReflect.Descriptor instead.
func (*AppEntityChanged) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{26}
}

func (x *AppEntityChanged) GetEntityId() uint32 {
	if x != nil && x.EntityId != nil {
		return *x.EntityId
	}
	return 0
}

func (x *AppEntityChanged) GetPayload() *AppEntityPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type AppMap_Monument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *string  `protobuf:"bytes,1,req,name=token" json:"token,omitempty"`
	X     *float32 `protobuf:"fixed32,2,req,name=x" json:"x,omitempty"`
	Y     *float32 `protobuf:"fixed32,3,req,name=y" json:"y,omitempty"`
}

func (x *AppMap_Monument) Reset() {
	*x = AppMap_Monument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMap_Monument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMap_Monument) ProtoMessage() {}

func (x *AppMap_Monument) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMap_Monument.ProtoReflect.Descriptor instead.
func (*AppMap_Monument) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{13, 0}
}

func (x *AppMap_Monument) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *AppMap_Monument) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *AppMap_Monument) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type AppTeamInfo_Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SteamId   *uint64  `protobuf:"varint,1,req,name=steamId" json:"steamId,omitempty"`
	Name      *string  `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	X         *float32 `protobuf:"fixed32,3,req,name=x" json:"x,omitempty"`
	Y         *float32 `protobuf:"fixed32,4,req,name=y" json:"y,omitempty"`
	IsOnline  *bool    `protobuf:"varint,5,req,name=isOnline" json:"isOnline,omitempty"`
	SpawnTime *uint32  `protobuf:"varint,6,req,name=spawnTime" json:"spawnTime,omitempty"`
	IsAlive   *bool    `protobuf:"varint,7,req,name=isAlive" json:"isAlive,omitempty"`
	DeathTime *uint32  `protobuf:"varint,8,req,name=deathTime" json:"deathTime,omitempty"`
}

func (x *AppTeamInfo_Member) Reset() {
	*x = AppTeamInfo_Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTeamInfo_Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTeamInfo_Member) ProtoMessage() {}

func (x *AppTeamInfo_Member) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTeamInfo_Member.ProtoReflect.Descriptor instead.
func (*AppTeamInfo_Member) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{14, 0}
}

func (x *AppTeamInfo_Member) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

func (x *AppTeamInfo_Member) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AppTeamInfo_Member) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *AppTeamInfo_Member) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *AppTeamInfo_Member) GetIsOnline() bool {
	if x != nil && x.IsOnline != nil {
		return *x.IsOnline
	}
	return false
}

func (x *AppTeamInfo_Member) GetSpawnTime() uint32 {
	if x != nil && x.SpawnTime != nil {
		return *x.SpawnTime
	}
	return 0
}

func (x *AppTeamInfo_Member) GetIsAlive() bool {
	if x != nil && x.IsAlive != nil {
		return *x.IsAlive
	}
	return false
}

func (x *AppTeamInfo_Member) GetDeathTime() uint32 {
	if x != nil && x.DeathTime != nil {
		return *x.DeathTime
	}
	return 0
}

type AppTeamInfo_Note struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *int32   `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	X    *float32 `protobuf:"fixed32,3,req,name=x" json:"x,omitempty"`
	Y    *float32 `protobuf:"fixed32,4,req,name=y" json:"y,omitempty"`
}

func (x *AppTeamInfo_Note) Reset() {
	*x = AppTeamInfo_Note{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTeamInfo_Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTeamInfo_Note) ProtoMessage() {}

func (x *AppTeamInfo_Note) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTeamInfo_Note.ProtoReflect.Descriptor instead.
func (*AppTeamInfo_Note) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{14, 1}
}

func (x *AppTeamInfo_Note) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *AppTeamInfo_Note) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *AppTeamInfo_Note) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type AppEntityPayload_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId          *int32 `protobuf:"varint,1,req,name=itemId" json:"itemId,omitempty"`
	Quantity        *int32 `protobuf:"varint,2,req,name=quantity" json:"quantity,omitempty"`
	ItemIsBlueprint *bool  `protobuf:"varint,3,req,name=itemIsBlueprint" json:"itemIsBlueprint,omitempty"`
}

func (x *AppEntityPayload_Item) Reset() {
	*x = AppEntityPayload_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppEntityPayload_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppEntityPayload_Item) ProtoMessage() {}

func (x *AppEntityPayload_Item) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppEntityPayload_Item.ProtoReflect.Descriptor instead.
func (*AppEntityPayload_Item) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{18, 0}
}

func (x *AppEntityPayload_Item) GetItemId() int32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *AppEntityPayload_Item) GetQuantity() int32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *AppEntityPayload_Item) GetItemIsBlueprint() bool {
	if x != nil && x.ItemIsBlueprint != nil {
		return *x.ItemIsBlueprint
	}
	return false
}

type AppMarker_SellOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId              *int32 `protobuf:"varint,1,req,name=itemId" json:"itemId,omitempty"`
	Quantity            *int32 `protobuf:"varint,2,req,name=quantity" json:"quantity,omitempty"`
	CurrencyId          *int32 `protobuf:"varint,3,req,name=currencyId" json:"currencyId,omitempty"`
	CostPerItem         *int32 `protobuf:"varint,4,req,name=costPerItem" json:"costPerItem,omitempty"`
	AmountInStock       *int32 `protobuf:"varint,5,req,name=amountInStock" json:"amountInStock,omitempty"`
	ItemIsBlueprint     *bool  `protobuf:"varint,6,req,name=itemIsBlueprint" json:"itemIsBlueprint,omitempty"`
	CurrencyIsBlueprint *bool  `protobuf:"varint,7,req,name=currencyIsBlueprint" json:"currencyIsBlueprint,omitempty"`
}

func (x *AppMarker_SellOrder) Reset() {
	*x = AppMarker_SellOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rustplus_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMarker_SellOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMarker_SellOrder) ProtoMessage() {}

func (x *AppMarker_SellOrder) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rustplus_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMarker_SellOrder.ProtoReflect.Descriptor instead.
func (*AppMarker_SellOrder) Descriptor() ([]byte, []int) {
	return file_internal_rustplus_proto_rawDescGZIP(), []int{22, 0}
}

func (x *AppMarker_SellOrder) GetItemId() int32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *AppMarker_SellOrder) GetQuantity() int32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *AppMarker_SellOrder) GetCurrencyId() int32 {
	if x != nil && x.CurrencyId != nil {
		return *x.CurrencyId
	}
	return 0
}

func (x *AppMarker_SellOrder) GetCostPerItem() int32 {
	if x != nil && x.CostPerItem != nil {
		return *x.CostPerItem
	}
	return 0
}

func (x *AppMarker_SellOrder) GetAmountInStock() int32 {
	if x != nil && x.AmountInStock != nil {
		return *x.AmountInStock
	}
	return 0
}

func (x *AppMarker_SellOrder) GetItemIsBlueprint() bool {
	if x != nil && x.ItemIsBlueprint != nil {
		return *x.ItemIsBlueprint
	}
	return false
}

func (x *AppMarker_SellOrder) GetCurrencyIsBlueprint() bool {
	if x != nil && x.CurrencyIsBlueprint != nil {
		return *x.CurrencyIsBlueprint
	}
	return false
}

var File_internal_rustplus_proto protoreflect.FileDescriptor

var file_internal_rustplus_proto_rawDesc = []byte{
	0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x75, 0x73, 0x74, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x75, 0x73, 0x74, 0x70,
	0x6c, 0x75, 0x73, 0x22, 0x75, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x31, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52,
	0x09, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0xf9, 0x06, 0x0a, 0x0a, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x07, 0x67, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x07, 0x67, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x06, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x34, 0x0a,
	0x0b, 0x67, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x68,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x0b, 0x67, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x12, 0x42, 0x0a, 0x0f, 0x73, 0x65, 0x6e,
	0x64, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x73, 0x65,
	0x6e, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a,
	0x0d, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x65,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x73, 0x65,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x40, 0x0a, 0x11,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x11, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b,
	0x0a, 0x0f, 0x73, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0d, 0x67,
	0x65, 0x74, 0x4d, 0x61, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x0d, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x47, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e,
	0x67, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x46,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4d, 0x0a,
	0x15, 0x41, 0x70, 0x70, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x12,
	0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x6f, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0xa6, 0x04, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x2e,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x28,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x25, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41,
	0x70, 0x70, 0x4d, 0x61, 0x70, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72,
	0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x65,
	0x61, 0x6d, 0x43, 0x68, 0x61, 0x74, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x74,
	0x12, 0x37, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x4d, 0x61, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x0a, 0x6d,
	0x61, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x0b, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x75,
	0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40,
	0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x52, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x22, 0x0a, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x0c, 0x0a, 0x0a,
	0x41, 0x70, 0x70, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x20, 0x0a, 0x08, 0x41, 0x70,
	0x70, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa1, 0x02, 0x0a,
	0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x61, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x77, 0x69, 0x70, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08,
	0x77, 0x69, 0x70, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x08, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x64, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x61, 0x6c, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74,
	0x22, 0x99, 0x01, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x64, 0x61, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x02, 0x52, 0x10, 0x64, 0x61, 0x79, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x02, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6e, 0x72, 0x69, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x02, 0x52, 0x07, 0x73, 0x75, 0x6e, 0x72, 0x69, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x02,
	0x52, 0x06, 0x73, 0x75, 0x6e, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x02, 0x28, 0x02, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x8b, 0x02, 0x0a,
	0x06, 0x41, 0x70, 0x70, 0x4d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x70, 0x67, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x6a, 0x70, 0x67, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x63, 0x65, 0x61, 0x6e, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x12, 0x37, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x61, 0x70, 0x2e, 0x4d, 0x6f, 0x6e, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x1a, 0x3c, 0x0a, 0x08,
	0x4d, 0x6f, 0x6e, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0xe6, 0x03, 0x0a, 0x0b, 0x41,
	0x70, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x36, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x4e,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x75, 0x73,
	0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x4e, 0x6f, 0x74, 0x65, 0x73,
	0x12, 0x42, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x4e, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70,
	0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x0e, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x4e,
	0x6f, 0x74, 0x65, 0x73, 0x1a, 0xc4, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04,
	0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x07,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x61, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x09, 0x64, 0x65, 0x61, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x36, 0x0a, 0x04, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x02,
	0x52, 0x01, 0x79, 0x22, 0x43, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x43, 0x68,
	0x61, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x41, 0x70, 0x70,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x72, 0x0a,
	0x0d, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72,
	0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72,
	0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0xb3, 0x02, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x75,
	0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12,
	0x24, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x1a, 0x64, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x28, 0x0a,
	0x0f, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x73, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x73, 0x42, 0x6c,
	0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x46, 0x6c,
	0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x4d,
	0x61, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x75, 0x73,
	0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x52,
	0x07, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x22, 0x41, 0x0a, 0x07, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x34, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12,
	0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x7a, 0x12, 0x0c, 0x0a,
	0x01, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x77, 0x22, 0xf7, 0x04, 0x0a, 0x09,
	0x41, 0x70, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c,
	0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x02, 0x28, 0x02, 0x52,
	0x01, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73,
	0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x34, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x12, 0x29, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75,
	0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x34, 0x52, 0x06,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x1a,
	0x83, 0x02, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x73, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x73, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49,
	0x73, 0x42, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x73, 0x42, 0x6c, 0x75, 0x65,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x22, 0x42, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6a, 0x70, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x08, 0x6a, 0x70, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a, 0x0e, 0x41, 0x70, 0x70,
	0x54, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x75, 0x73, 0x74,
	0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x0e, 0x41, 0x70,
	0x70, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x64, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x75, 0x73, 0x74, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x3a, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72,
	0x10, 0x03, 0x2a, 0x75, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x56, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x48, 0x34, 0x37, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x61, 0x72, 0x67, 0x6f, 0x53, 0x68, 0x69, 0x70, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x43,
	0x72, 0x61, 0x74, 0x65, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69,
	0x63, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x10, 0x07, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f,
}

var (
	file_internal_rustplus_proto_rawDescOnce sync.Once
	file_internal_rustplus_proto_rawDescData = file_internal_rustplus_proto_rawDesc
)

func file_internal_rustplus_proto_rawDescGZIP() []byte {
	file_internal_rustplus_proto_rawDescOnce.Do(func() {
		file_internal_rustplus_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_rustplus_proto_rawDescData)
	})
	return file_internal_rustplus_proto_rawDescData
}

var file_internal_rustplus_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_internal_rustplus_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_internal_rustplus_proto_goTypes = []interface{}{
	(AppEntityType)(0),            // 0: rustplus.AppEntityType
	(AppMarkerType)(0),            // 1: rustplus.AppMarkerType
	(*AppMessage)(nil),            // 2: rustplus.AppMessage
	(*AppRequest)(nil),            // 3: rustplus.AppRequest
	(*AppSendMessage)(nil),        // 4: rustplus.AppSendMessage
	(*AppSetEntityValue)(nil),     // 5: rustplus.AppSetEntityValue
	(*AppCameraFrameRequest)(nil), // 6: rustplus.AppCameraFrameRequest
	(*AppPromoteToLeader)(nil),    // 7: rustplus.AppPromoteToLeader
	(*AppResponse)(nil),           // 8: rustplus.AppResponse
	(*AppBroadcast)(nil),          // 9: rustplus.AppBroadcast
	(*AppEmpty)(nil),              // 10: rustplus.AppEmpty
	(*AppSuccess)(nil),            // 11: rustplus.AppSuccess
	(*AppError)(nil),              // 12: rustplus.AppError
	(*AppInfo)(nil),               // 13: rustplus.AppInfo
	(*AppTime)(nil),               // 14: rustplus.AppTime
	(*AppMap)(nil),                // 15: rustplus.AppMap
	(*AppTeamInfo)(nil),           // 16: rustplus.AppTeamInfo
	(*AppTeamChat)(nil),           // 17: rustplus.AppTeamChat
	(*AppChatMessage)(nil),        // 18: rustplus.AppChatMessage
	(*AppEntityInfo)(nil),         // 19: rustplus.AppEntityInfo
	(*AppEntityPayload)(nil),      // 20: rustplus.AppEntityPayload
	(*AppFlag)(nil),               // 21: rustplus.AppFlag
	(*AppMapMarkers)(nil),         // 22: rustplus.AppMapMarkers
	(*Vector4)(nil),               // 23: rustplus.Vector4
	(*AppMarker)(nil),             // 24: rustplus.AppMarker
	(*AppCameraFrame)(nil),        // 25: rustplus.AppCameraFrame
	(*AppTeamChanged)(nil),        // 26: rustplus.AppTeamChanged
	(*AppTeamMessage)(nil),        // 27: rustplus.AppTeamMessage
	(*AppEntityChanged)(nil),      // 28: rustplus.AppEntityChanged
	(*AppMap_Monument)(nil),       // 29: rustplus.AppMap.Monument
	(*AppTeamInfo_Member)(nil),    // 30: rustplus.AppTeamInfo.Member
	(*AppTeamInfo_Note)(nil),      // 31: rustplus.AppTeamInfo.Note
	(*AppEntityPayload_Item)(nil), // 32: rustplus.AppEntityPayload.Item
	(*AppMarker_SellOrder)(nil),   // 33: rustplus.AppMarker.SellOrder
}
var file_internal_rustplus_proto_depIdxs = []int32{
	8,  // 0: rustplus.AppMessage.response:type_name -> rustplus.AppResponse
	9,  // 1: rustplus.AppMessage.broadcast:type_name -> rustplus.AppBroadcast
	10, // 2: rustplus.AppRequest.getInfo:type_name -> rustplus.AppEmpty
	10, // 3: rustplus.AppRequest.getTime:type_name -> rustplus.AppEmpty
	10, // 4: rustplus.AppRequest.getMap:type_name -> rustplus.AppEmpty
	10, // 5: rustplus.AppRequest.getTeamInfo:type_name -> rustplus.AppEmpty
	10, // 6: rustplus.AppRequest.getTeamChat:type_name -> rustplus.AppEmpty
	4,  // 7: rustplus.AppRequest.sendTeamMessage:type_name -> rustplus.AppSendMessage
	10, // 8: rustplus.AppRequest.getEntityInfo:type_name -> rustplus.AppEmpty
	5,  // 9: rustplus.AppRequest.setEntityValue:type_name -> rustplus.AppSetEntityValue
	10, // 10: rustplus.AppRequest.checkSubscription:type_name -> rustplus.AppEmpty
	21, // 11: rustplus.AppRequest.setSubscription:type_name -> rustplus.AppFlag
	10, // 12: rustplus.AppRequest.getMapMarkers:type_name -> rustplus.AppEmpty
	6,  // 13: rustplus.AppRequest.getCameraFrame:type_name -> rustplus.AppCameraFrameRequest
	7,  // 14: rustplus.AppRequest.promoteToLeader:type_name -> rustplus.AppPromoteToLeader
	11, // 15: rustplus.AppResponse.success:type_name -> rustplus.AppSuccess
	12, // 16: rustplus.AppResponse.error:type_name -> rustplus.AppError
	13, // 17: rustplus.AppResponse.info:type_name -> rustplus.AppInfo
	14, // 18: rustplus.AppResponse.time:type_name -> rustplus.AppTime
	15, // 19: rustplus.AppResponse.map:type_name -> rustplus.AppMap
	16, // 20: rustplus.AppResponse.teamInfo:type_name -> rustplus.AppTeamInfo
	17, // 21: rustplus.AppResponse.teamChat:type_name -> rustplus.AppTeamChat
	19, // 22: rustplus.AppResponse.entityInfo:type_name -> rustplus.AppEntityInfo
	21, // 23: rustplus.AppResponse.flag:type_name -> rustplus.AppFlag
	22, // 24: rustplus.AppResponse.mapMarkers:type_name -> rustplus.AppMapMarkers
	25, // 25: rustplus.AppResponse.cameraFrame:type_name -> rustplus.AppCameraFrame
	26, // 26: rustplus.AppBroadcast.teamChanged:type_name -> rustplus.AppTeamChanged
	27, // 27: rustplus.AppBroadcast.teamMessage:type_name -> rustplus.AppTeamMessage
	28, // 28: rustplus.AppBroadcast.entityChanged:type_name -> rustplus.AppEntityChanged
	29, // 29: rustplus.AppMap.monuments:type_name -> rustplus.AppMap.Monument
	30, // 30: rustplus.AppTeamInfo.members:type_name -> rustplus.AppTeamInfo.Member
	31, // 31: rustplus.AppTeamInfo.mapNotes:type_name -> rustplus.AppTeamInfo.Note
	31, // 32: rustplus.AppTeamInfo.leaderMapNotes:type_name -> rustplus.AppTeamInfo.Note
	18, // 33: rustplus.AppTeamChat.messages:type_name -> rustplus.AppChatMessage
	0,  // 34: rustplus.AppEntityInfo.type:type_name -> rustplus.AppEntityType
	20, // 35: rustplus.AppEntityInfo.payload:type_name -> rustplus.AppEntityPayload
	32, // 36: rustplus.AppEntityPayload.items:type_name -> rustplus.AppEntityPayload.Item
	24, // 37: rustplus.AppMapMarkers.markers:type_name -> rustplus.AppMarker
	1,  // 38: rustplus.AppMarker.type:type_name -> rustplus.AppMarkerType
	23, // 39: rustplus.AppMarker.color1:type_name -> rustplus.Vector4
	23, // 40: rustplus.AppMarker.color2:type_name -> rustplus.Vector4
	33, // 41: rustplus.AppMarker.sellOrders:type_name -> rustplus.AppMarker.SellOrder
	16, // 42: rustplus.AppTeamChanged.teamInfo:type_name -> rustplus.AppTeamInfo
	18, // 43: rustplus.AppTeamMessage.message:type_name -> rustplus.AppChatMessage
	20, // 44: rustplus.AppEntityChanged.payload:type_name -> rustplus.AppEntityPayload
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_internal_rustplus_proto_init() }
func file_internal_rustplus_proto_init() {
	if File_internal_rustplus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_rustplus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSendMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSetEntityValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppCameraFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPromoteToLeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTeamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTeamChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppEntityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppEntityPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMapMarkers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vector4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMarker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppCameraFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTeamChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTeamMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppEntityChanged); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMap_Monument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTeamInfo_Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTeamInfo_Note); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppEntityPayload_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rustplus_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMarker_SellOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_rustplus_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_rustplus_proto_goTypes,
		DependencyIndexes: file_internal_rustplus_proto_depIdxs,
		EnumInfos:         file_internal_rustplus_proto_enumTypes,
		MessageInfos:      file_internal_rustplus_proto_msgTypes,
	}.Build()
	File_internal_rustplus_proto = out.File
	file_internal_rustplus_proto_rawDesc = nil
	file_internal_rustplus_proto_goTypes = nil
	file_internal_rustplus_proto_depIdxs = nil
}
